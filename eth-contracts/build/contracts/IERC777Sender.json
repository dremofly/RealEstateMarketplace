{
  "contractName": "IERC777Sender",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "operator",
          "type": "address"
        },
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "userData",
          "type": "bytes"
        },
        {
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "tokensToSend",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\n\n/**\n * @dev Interface of the ERC777TokensSender standard as defined in the EIP.\n *\n * `IERC777` Token holders can be notified of operations performed on their\n * tokens by having a contract implement this interface (contract holders can be\n *  their own implementer) and registering it on the\n * [ERC1820 global registry](https://eips.ethereum.org/EIPS/eip-1820).\n *\n * See `IERC1820Registry` and `ERC1820Implementer`.\n */\ninterface IERC777Sender {\n    /**\n     * @dev Called by an `IERC777` token contract whenever a registered holder's\n     * (`from`) tokens are about to be moved or destroyed. The type of operation\n     * is conveyed by `to` being the zero address or not.\n     *\n     * This call occurs _before_ the token contract's state is updated, so\n     * `IERC777.balanceOf`, etc., can be used to query the pre-operation state.\n     *\n     * This function may revert to prevent the operation from being executed.\n     */\n    function tokensToSend(\n        address operator,\n        address from,\n        address to,\n        uint amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external;\n}\n",
  "sourcePath": "/Users/hong/OneDrive - shanghaitech.edu.cn/projects/blockchainND/capstone/Blockchain-Capstone/eth-contracts/contracts/openzeppelin-solidity/contracts/token/ERC777/IERC777Sender.sol",
  "ast": {
    "absolutePath": "/Users/hong/OneDrive - shanghaitech.edu.cn/projects/blockchainND/capstone/Blockchain-Capstone/eth-contracts/contracts/openzeppelin-solidity/contracts/token/ERC777/IERC777Sender.sol",
    "exportedSymbols": {
      "IERC777Sender": [
        16021
      ]
    },
    "id": 16022,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 16005,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:75"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@dev Interface of the ERC777TokensSender standard as defined in the EIP.\n * `IERC777` Token holders can be notified of operations performed on their\ntokens by having a contract implement this interface (contract holders can be\n their own implementer) and registering it on the\n[ERC1820 global registry](https://eips.ethereum.org/EIPS/eip-1820).\n * See `IERC1820Registry` and `ERC1820Implementer`.",
        "fullyImplemented": false,
        "id": 16021,
        "linearizedBaseContracts": [
          16021
        ],
        "name": "IERC777Sender",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Called by an `IERC777` token contract whenever a registered holder's\n(`from`) tokens are about to be moved or destroyed. The type of operation\nis conveyed by `to` being the zero address or not.\n     * This call occurs _before_ the token contract's state is updated, so\n`IERC777.balanceOf`, etc., can be used to query the pre-operation state.\n     * This function may revert to prevent the operation from being executed.",
            "id": 16020,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokensToSend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16007,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 16020,
                  "src": "992:16:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16006,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "992:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16009,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 16020,
                  "src": "1018:12:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16008,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16011,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 16020,
                  "src": "1040:10:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16010,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1040:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16013,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 16020,
                  "src": "1060:11:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16012,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1060:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16015,
                  "name": "userData",
                  "nodeType": "VariableDeclaration",
                  "scope": 16020,
                  "src": "1081:23:75",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16014,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1081:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16017,
                  "name": "operatorData",
                  "nodeType": "VariableDeclaration",
                  "scope": 16020,
                  "src": "1114:27:75",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16016,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1114:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "982:165:75"
            },
            "returnParameters": {
              "id": 16019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1156:0:75"
            },
            "scope": 16021,
            "src": "961:196:75",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 16022,
        "src": "448:711:75"
      }
    ],
    "src": "0:1160:75"
  },
  "legacyAST": {
    "absolutePath": "/Users/hong/OneDrive - shanghaitech.edu.cn/projects/blockchainND/capstone/Blockchain-Capstone/eth-contracts/contracts/openzeppelin-solidity/contracts/token/ERC777/IERC777Sender.sol",
    "exportedSymbols": {
      "IERC777Sender": [
        16021
      ]
    },
    "id": 16022,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 16005,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:75"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@dev Interface of the ERC777TokensSender standard as defined in the EIP.\n * `IERC777` Token holders can be notified of operations performed on their\ntokens by having a contract implement this interface (contract holders can be\n their own implementer) and registering it on the\n[ERC1820 global registry](https://eips.ethereum.org/EIPS/eip-1820).\n * See `IERC1820Registry` and `ERC1820Implementer`.",
        "fullyImplemented": false,
        "id": 16021,
        "linearizedBaseContracts": [
          16021
        ],
        "name": "IERC777Sender",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Called by an `IERC777` token contract whenever a registered holder's\n(`from`) tokens are about to be moved or destroyed. The type of operation\nis conveyed by `to` being the zero address or not.\n     * This call occurs _before_ the token contract's state is updated, so\n`IERC777.balanceOf`, etc., can be used to query the pre-operation state.\n     * This function may revert to prevent the operation from being executed.",
            "id": 16020,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokensToSend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16007,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 16020,
                  "src": "992:16:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16006,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "992:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16009,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 16020,
                  "src": "1018:12:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16008,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16011,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 16020,
                  "src": "1040:10:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16010,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1040:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16013,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 16020,
                  "src": "1060:11:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16012,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1060:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16015,
                  "name": "userData",
                  "nodeType": "VariableDeclaration",
                  "scope": 16020,
                  "src": "1081:23:75",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16014,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1081:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16017,
                  "name": "operatorData",
                  "nodeType": "VariableDeclaration",
                  "scope": 16020,
                  "src": "1114:27:75",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16016,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1114:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "982:165:75"
            },
            "returnParameters": {
              "id": 16019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1156:0:75"
            },
            "scope": 16021,
            "src": "961:196:75",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 16022,
        "src": "448:711:75"
      }
    ],
    "src": "0:1160:75"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.9",
  "updatedAt": "2019-08-17T07:59:50.910Z",
  "devdoc": {
    "details": "Interface of the ERC777TokensSender standard as defined in the EIP. * `IERC777` Token holders can be notified of operations performed on their tokens by having a contract implement this interface (contract holders can be their own implementer) and registering it on the [ERC1820 global registry](https://eips.ethereum.org/EIPS/eip-1820). * See `IERC1820Registry` and `ERC1820Implementer`.",
    "methods": {
      "tokensToSend(address,address,address,uint256,bytes,bytes)": {
        "details": "Called by an `IERC777` token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not.     * This call occurs _before_ the token contract's state is updated, so `IERC777.balanceOf`, etc., can be used to query the pre-operation state.     * This function may revert to prevent the operation from being executed."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}